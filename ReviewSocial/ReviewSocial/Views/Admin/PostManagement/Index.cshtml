@*@model IEnumerable<ReviewSocial.Models.Post>*@
 @model PagedList.IPagedList<Post>
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    Layout = "_AdminLayout";
    string sortByValue = HttpContextAccessor.HttpContext.Request.Query["sortBy"];
    string page = HttpContextAccessor.HttpContext.Request.Query["page"];
}

<div class="row">
    <div class="col-md-12">
        <div class="tile">
            <div class="tile-body">

                <div class="row element-button">
              
                    <div class="col-sm-6 ">
                        <a href="/admin/post/create" class="btn btn-add btn-sm" title="Thêm">
                            <i class="fa fa-plus"></i> 
                            Thêm bài viết mới
                        </a>

                      @*  <button class="btn btn-add btn-sm" title="Thêm" data-toggle="modal" data-target="#exampleModal" onclick="openModalCreate()">
                            <i class="fa fa-plus"></i>
                            Thêm bài viết mới
                        </button>*@
                     @*   <button id="deleteAllPost" class="btn btn-add btn-sm" title="Xóa">
                            <i class="fa fa-plus"></i>
                            Xóa bài viết 
                        </button>*@
                    </div>
                    <div class="col-md-6 d-flex justify-content-end">
                        <form class="form-inline">
                            <div class="form-group">
                                <input type="text" class="form-control h-auto mr-2" name="keyword" id="keyword" placeholder="Tìm kiếm ...">
                            </div>
                            <button type="button" class="btn btn-primary m-auto" id="btnSearch">Tìm</button>
                        </form>
                    </div>
                </div>
                <table class="table table-hover table-bordered" id="tblPost" cellpadding="0" cellspacing="0" border="0">
                    <thead>
                        <tr>
                           @* <th width="10"><input type="checkbox" id="checkAll"></th>*@
                            <th width="10">STT</th>
                          @*  <th width="100">Mã bài viết</th>*@
                            <th width="200">
                                <a href="/admin/post?page=@(page)&sortBy=@(sortByValue != "title_asc" ? "title_asc" : "title_desc")">Tiêu đề</a>
                                @if (sortByValue == "title_asc" || sortByValue == "title_desc")
                                {
                                    <i class="fa fa-caret-@(sortByValue != "title_asc" ? "up" : "down")" aria-hidden="true"></i>
                                }
                            </th>
                            <th width="150">
                                <a href="/admin/post?page=@(page)&sortBy=@(sortByValue != "category_name_asc" ? "category_name_asc" : "category_name_desc")">Danh mục</a>
                                @if (sortByValue == "category_name_asc" || sortByValue == "category_name_desc")
                                {
                                    <i class="fa fa-caret-@(sortByValue != "category_name_asc" ? "up" : "down")" aria-hidden="true"></i>
                                }
                            </th>
                            <th width="30">Ảnh nổi bật</th>
                            <th width="100">Tính năng</th>
                        </tr>
                    </thead>
                    <tbody id="postBody">
                            @{
                                var count = 1;
                            }
                            @foreach (var item in Model)
                            {
                            <tr id="post-@item.Id">
                               @* <td width="10"><input class="itemCheckbox" id="@item.Id" type="checkbox" name="check1" value="1"></td>*@
                                <td>@count</td>
                               @* <td>@item.Id</td>*@
                                <td id="title-@item.Id">@item.Title</td>
                                <td>@item.Category.Name</td>
                                <td id="thumbnail">
                                    <img class="w-100" src="@(item.Thumbnail == null ? "/img/logo.jpg" : "/img/posts/" + item.Thumbnail)" />
                                </td>
                                <td class="table-td-center">
                                  @*  <button class="btn btn-primary btn-sm trash" type="button" title="Xóa"
                                            onclick="getCategoryById(@item.Id)" data-toggle="modal" data-target="#deleteModal">
                                        <i class="fa fa-trash"></i>
                                    </button>
                                    <button class="btn btn-primary btn-sm edit" type="button" title="Sửa" id="show-emp"
                                            onclick="getCategoryById(@item.Id)" data-toggle="modal" data-target="#exampleModal">
                                        <i class="fa fa-edit"></i>
                                    </button>*@
                                    <button class="btn btn-primary btn-sm trash" type="button" title="Xóa"
                                            onclick="deletePost(@item.Id)">
                                        <i class="fa fa-trash"></i>
                                    </button>
                                    <a href = "/admin/post/update/@item.Id"class="btn btn-primary btn-sm edit" title="Sửa" id="show-emp">
                                        <i class="fa fa-edit"></i>
                                    </a>

                                   @* <button class="btn btn-primary " type="button" title="Sửa"
                                            data-toggle="modal" data-target="#exampleModal" onclick="getPostById(@item.Id)">
                                        <i class="fa fa-edit"></i>
                                    </button>*@
                                </td>
                            </tr>
                            count++;
                        }
  @*                          <td>1</td>
                            <td>M01</td>
                            <td>Kem chống nắng tốt nhất hiện nay </td>
                            <td>Chăm sóc sức khỏe</td>
                            <td><img class="img-card-person" src="~/img/avatar.jpg" alt=""></td>  
                            <td class="table-td-center">
                                <button class="btn btn-primary btn-sm trash" type="button" title="Xóa"
                                        onclick="myFunction(this)">
                                    <i class="fa fa-trash"></i>
                                </button>
                                <button class="btn btn-primary btn-sm edit" type="button" title="Sửa" id="show-emp"
                                        data-toggle="modal" data-target="#ModalUP">
                                    <i class="fa fa-edit"></i>
                                </button>
                            </td>*@
                    </tbody>
                </table>
            </div>
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-center">
                    @if (!Model.IsFirstPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="/admin/post?sortBy=@sortByValue">&laquo;</a>
                        </li>
                        <li class="page-item @(Model.IsFirstPage ? "disabled" : "")">
                            <a class="page-link" href="/admin/post?page=@(Model.PageNumber - 1)&sortBy=@sortByValue">&#8249;</a>
                        </li>
                    }
                    @for (int i = 1; i <= Model.PageCount; i++)
                    {
                        <li class="page-item @(i == Model.PageNumber ? "active" : "")"><a class="page-link" href="/admin/post?page=@i&sortBy=@sortByValue">@i</a></li>
                    }
                    @if (!Model.IsLastPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="/admin/post?page=@(Model.PageNumber + 1)&sortBy=@sortByValue">&#8250;</a>
                        </li>
                        <li class="page-item @(Model.IsLastPage ? "disabled" : "")">
                            <a class="page-link" href="/admin/post?page=@(Model.PageCount)&sortBy=@sortByValue">&raquo;</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
</div>

<!-- Modal -->
@*<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">      
        <div class="modal-content">
            <div class="modal-body">
                <div class="form-group row mb-3">
                    <div>
                        <h5 class="modal-title" id="exampleModalLabel">Tạo bài viết</h5>
                    </div>
                    <label for="title" class="col-sm-2 col-form-label">Tiêu đề:</label>
                    <div class="col-sm-10">
                        <input type="text" name="title" class="form-control" id="title" value="" placeholder="Tiêu đề">
                    </div>
                </div>
                <div class="form-group row mb-3">
                    <label for="title" class="col-sm-2 col-form-label">Danh mục:</label>
                    <div class="col-sm-10">
                        <select class="form-control" id="exampleFormControlSelect1">
                            <option>1</option>
                            <option>2</option>
                            <option>3</option>
                            <option>4</option>
                            <option>5</option>
                        </select>
                    </div>
                </div>
                <div class="form-group row mb-3">
                    <label for="inputPassword" class="col-sm-2 col-form-label">Nội dung:</label>
                    <div class="col-sm-10">
                        <textarea name="content" id="content-home" class="form-control w-100" rows="10"></textarea>
                    </div>
                </div>
                <div class="form-group row mb-3">
                    <label for="exampleFormControlFile1" class="col-sm-2 col-form-label">Ảnh bài viết:</label>
                    <div class="col-sm-10">
                        <input type="file" name="file" class="form-control-file" id="exampleFormControlFile1">
                    </div>
                </div>*@
              @*  <div class="row">
                    <div class="form-group  col-md-12">
                        <span class="thong-tin-thanh-toan">
                            <h5>Tạo chức vụ mới</h5>
                        </span>
                    </div>
                    <div class="form-group col-md-12">
                        <label class="control-label">Nhập tên chức vụ mới</label>
                        <input class="form-control" type="text" required="">
                    </div>
                </div>*@
@*               <br>
                <button class="btn btn-save" type="button">Lưu lại</button>
                <a class="btn btn-cancel" data-dismiss="modal" href="#">Hủy bỏ</a>
                <br>
            </div>
            <div class="modal-footer">

            </div>
        </div>
    </div>
</div>*@

<!-- Modal -->
<div class="modal fade" id="exampleModal" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" style="margin-left: 100px;">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <form action="#" method="">
                <div class="modal-header">
                    <h5 class="modal-title text-dark" id="exampleModalLabel">Tạo bài viết</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true" class=" text-dark">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group row mb-3">
                        <label for="title" class="col-sm-2 col-form-label">Tiêu đề:</label>
                        <div class="col-sm-10">
                            <input type="text" name="title" class="form-control" id="title" value="" placeholder="Tiêu đề">
                            <span id="error-title"></span>
                        </div>
                    </div>
                    <div class="form-group row mb-3">
                        <label for="title" class="col-sm-2 col-form-label">Danh mục:</label>
                        <div class="col-sm-10">
                            <select class="form-control" id="category">
                                @foreach (var category in ViewBag.Category)
                                {
                                    <option value="@category.Id">@category.Name</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="form-group row mb-3">
                        <label for="inputPassword" class="col-sm-2 col-form-label">Nội dung:</label>
                        <div class="col-sm-10">
                            <textarea name="content" id="content-home" class="form-control w-100" rows="10"></textarea>
                            <span id="error-content"></span>
                        </div>
                    </div>
                    <div class="form-group row mb-3">
                        <label for="exampleFormControlFile1" class="col-sm-2 col-form-label">Ảnh bài viết:</label>
                        <div class="col-sm-10">
                            <input type="file" name="file" class="form-control-file" id="file">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" id="btnCloseModal" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="btnSubmit" value="add" onclick="checkUpdate()">Lưu</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/site.js"></script>
    @*<script src="~/js/post.js"></script>*@
}
@*<script>
    const url = "/post/";
    const request = new XMLHttpRequest();
    const btnSubmit = document.getElementById("btnSubmit");
    const btnCloseModal = document.getElementById("btnCloseModal");
    const listPost = document.getElementById("postBody");
    const tblPost = document.getElementById("tblPost");

    btnSubmit.onclick = checkUpdate;

    function checkUpdate() {
        if (btnSubmit.value != "add")
            update();
        else
            create();
    }

    function create() {
        var check = true;
        if (document.getElementById("title").value == "") {
            document.getElementById("error-title").innerHTML = "Tiêu đề không được trống";
            check = false;
        }
        //else if (document.getElementById("title").value.length > 10) {
        //    document.getElementById("error-title").innerHTML = "Tiêu đề không được quá 10 ký tự";
        //    check = false;
        //}
        else {
            document.getElementById("error-title").innerHTML = "";
        }

        if (CKEDITOR.instances["content-home"].getData() == "") {
            document.getElementById("error-content").innerHTML = "Nội dung không được trống";
            check = false;
        }
        else {
            document.getElementById("error-content").innerHTML = "";
        }

        //if (document.getElementById("file").value == "") {
        //    document.getElementById("error-file").innerHTML = "Vui lòng chọn ảnh bài viết";
        //    check = false;
        //} else {
        //    document.getElementById("error-file").innerHTML = "";
        //}

        if (!check) {
            return;
        }

        var post = getDataForm();
        console.log(post);
        request.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                var res = JSON.parse(this.responseText);
                console.log(res);
                if (res.message != null) {
                    //error.innerHTML = res.message;
                    document.getElementById("error-title").innerHTML = res.message;
                    return;
                }

                listPost.insertAdjacentHTML("afterbegin", renderPost(res));
                btnCloseModal.click();
                alert("Thêm bài viết thành công");
                resetForm();
            }
        };
        request.open("POST", url + "Create", true);
        //request.setRequestHeader("Content-type", "application/json");
        //request.send(JSON.stringify(post));
        request.send(post);
    }

    function getDataForm() {
        var formData = new FormData();
        formData.append("Title", document.getElementById("title").value);
        formData.append("Content", CKEDITOR.instances["content-home"].getData());
        formData.append("CategoryId", document.getElementById("category").value);
        formData.append("file", document.getElementById("file").files[0] || "");
        return formData;
    }

    function resetForm() {
        document.getElementById("title").value = "";
        CKEDITOR.instances["content-home"].setData("");
        //document.getElementById("subCategory").value = "";
        document.getElementById("file").value = null;
        document.getElementById("exampleModalLabel").innerText = "Thêm thông tin bài viết";
        document.getElementById("btnSubmit").value = "add";
        document.getElementById("btnSubmit").innerText = "Lưu";
        document.getElementById("btnCloseModal").click();
    }

    function renderPost(post) {
        const nameCategory = getCategoryNameByCategoryId(post.categoryId);

        return `<tr id="post-${post.id}">
                        <td>${tblPost.rows.length}</td>
                        <td>${post.title}</td>
                        <td>${nameCategory}</td>
                        <td>
                            <img class="w-100" src="${post.thumbnail == null ? "/img/logo.jpg" : "/img/posts/" + post.thumbnail}" />
                        </td>
                        <td class="table-td-center">
                            <button class="btn btn-primary btn-sm trash" type="button" title="Xóa"
                                    onclick="deletePost(${post.id})">
                                <i class="fa fa-trash"></i>
                            </button>
                            <a href = "/admin/post/update/${post.id}"class="btn btn-primary btn-sm edit" title="Sửa" id="show-emp">
                                <i class="fa fa-edit"></i>
                            </a>
                        </td>
                    </tr>`;
    }

    function getCategoryNameByCategoryId(CategoryId) {
        var select = document.getElementById("category");
        for (var i = 0; i < select.options.length; i++) {
            var option = select.options[i];
            if (option.value == CategoryId) {
                return option.innerHTML;
            }
        }
        return "";
    }

    // xoa bài viết trang chủ
    function getPostId(id) {
        document.getElementById("btnDeletePost").value = id;
    }

    function deletePostWithModal() {
        var id = document.getElementById("btnDeletePost").value;
        request.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                const id = this.responseText;
                document.getElementById("post-" + id).style.display = "none";
                document.getElementById("btnCloseModalDelete").click();
                alert("Xóa bài viết thành công");
            }
        };
        request.open("POST", url + "Delete", true);
        request.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        request.send("id=" + id);
    }
    // sửa bài viết trang chủ
    function getPostById(id) {
        request.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                const { id, title, content, categoryId } = JSON.parse(
                    this.responseText
                );
                document.getElementById("title").value = title;
                CKEDITOR.instances["content-home"].setData(content);
                document.getElementById("category").value = categoryId;
                btnSubmit.value = id;
                btnSubmit.innerText = "Cập nhật"
            }
        };

        request.open("GET", url + "GetPostById?id=" + id, true);
        request.send();
    }
    function update() {
        var post = getDataForm();
        post.append("Id", btnSubmit.value);
        request.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                var res = JSON.parse(this.responseText);
                if (res.message != null) {
                    error.innerHTML = res.message;
                    return;
                }

                document.getElementById(`title-${res.id}`).innerText = res.title;
                if (document.getElementById(`content-${res.id}`) != null) {
                    document.getElementById(`content-${res.id}`).innerHTML = res.content;
                }


                //document.getElementById(post - ${ res.id }).children[3].innerText = getSubCategoryNameBySubCategoryId(res.subCategoryId);
                if (document.getElementById(`thumbnail-${res.id}`) != null) {
                    document.getElementById(`thumbnail-${res.id}`).innerHTML =
                        `<img src="${res.thumbnail != null ? "/img/posts/" + res.thumbnail : "/img/logo.jpg"}" class="img-responsive w-50">`;
                }


                alert("Cập nhật bài viết thành công!");
                //resetForm();
                document.getElementById("btnCloseModal").click();
            }
        };
        request.open("POST", url + "Update", true);
        request.send(post);
    }

    function hidenPost(id) {
        request.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                document.getElementById("post-" + id).style.display = "none";
                alert("Ẩn bài viết thành công");
            }
        };
        request.open("POST", url + "HidenPost", true);
        request.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        request.send("id=" + id);
    }

</script>*@
<script>
    const btnSearch = document.getElementById("btnSearch");
    
    //btnSearch.onclick=search;
    //document.getElementById("keyword").oninput=search;


    // dành cho xóa nhiều
    const btnDeleteAllPost = document.getElementById("deleteAllPost")
    const checkAll = document.getElementById("checkAll");
    const itemCheckboxes = document.getElementsByClassName("itemCheckbox");

    checkAll.onclick = checkAllHandler;
    btnDeleteAllPost.onclick = deletePosts;

    function deletePost(id) 
    {
        if (confirm("Bạn có chắc chắn muốn xoá bài viết này!") == true) {
            const xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    const id = this.responseText;
                    document.getElementById("post-" + id).style.display = "none";
                    alert("Xóa bài viết thành công");
                }
            };
            xhttp.open("POST", "/admin/post/delete", true);
            xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            xhttp.send("Id="+id);
        }
    }

    function search() {
        var keyword = document.getElementById("keyword").value;
        console.log("keyword: " + keyword);
        const request = new XMLHttpRequest();
        request.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                var res = JSON.parse(this.responseText);
                var html = "";
                for (var i = 0; i < res.length; i++) {
                    var post = res[i];
                    html += `<tr id="post-` + post.id + `">
                                <td>` + (i + 1) + `</td>
                                <td>` + post.id + `</td>
                                <td>` + post.title + `</td>
                                <td>` + post.category.name + `</td>
                                <td>
                                    <img class="w-100" src="` + (post.thumbnail == null ? "/img/logo.jpg" : "/img/posts/" + post.thumbnail) + `"/>
                                </td>
                                <td class="table-td-center">
                                    <button class="btn btn-primary btn-sm trash" type="button" title="Xóa"
                                            onclick="deletePost(` + post.id + `)">
                                        <i class="fa fa-trash"></i>
                                    </button>
                                    <a href="/admin/post/update/` + post.id + `" class="btn btn-primary btn-sm edit" title="Sửa" id="show-emp">
                                        <i class="fa fa-edit"></i>
                                    </a>
                                </td>
                            </tr>`;
                }
                document.getElementById("postBody").innerHTML = html;
            }
        };
        //request.open("GET", '/admin/post/Search/' + encodeURIComponent(keyword), true);
        request.open("GET", '/admin/post/search?keyword=' + keyword, true);
        request.send();
    }
    function checkAllHandler() {
        // Lấy giá trị (checked) của hộp kiểm "Check All"
        var isChecked = checkAll.checked;

        // Đặt giá trị cho tất cả các hộp kiểm trong danh sách theo giá trị của hộp kiểm "Check All"
        for (var i = 0; i < itemCheckboxes.length; i++) {
            itemCheckboxes[i].checked = isChecked;
        }
    }
    //Xóa nhiều
    function deletePosts() {
        //for (var i = 0; i < selectedPostIds.length; i++) {
        //    var postId = selectedPostIds[i];
        //    var row = document.getElementById("post-" + postId);
        //    console.log();
        //    row.parentNode.removeChild(row);
        //}
        if (confirm("Bạn có chắc chắn muốn xóa các bài viết không?")) {
            var selectedPostIds = [];
            for (var i = 0; i < itemCheckboxes.length; i++) {
                // Nếu checkbox được chọn
                if (itemCheckboxes[i].checked) {
                    // Lấy ID của bản ghi từ giá trị của checkbox
                    var postId = itemCheckboxes[i].id;
                    selectedPostIds.push(postId); // Thêm ID vào mảng selectedPostIds
                    document.getElementById("post-" + postId).style.display = "none";

                    const request = new XMLHttpRequest();
                    request.onreadystatechange = function () {
                        if (this.readyState == 4 && this.status == 200) {
                            const id = this.responseText;
                        }
                    };
                    request.open("POST", "/admin/post/delete", true);
                    request.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
                    request.send("id=" + postId);

                }
            }
            alert("Đã xóa thành công " + selectedPostIds.length + " bài viết");
            console.log(selectedPostIds);
        }
    }
</script>
