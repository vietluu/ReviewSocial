@using Microsoft.AspNetCore.Http
@using ReviewSocial.Repositories
@using System.Security.Claims;
@model IEnumerable<Post>
@inject ICategoryRepository ICategoryRepository;


@{
    var categories = ICategoryRepository.GetAll();
}
<style>
    .short-content {
        display: -webkit-box; 
        -webkit-line-clamp: 2; 
        -webkit-box-orient: vertical; 
        text-overflow: ellipsis; 
        overflow: hidden;
    }
</style>
<link href="~/css/profile.css" rel="stylesheet">
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div id="content" class="content content-full-width">
                <!-- begin profile -->
                <div class="profile">
                    <div class="profile-header">
                        <!-- BEGIN profile-header-cover -->
                        <div class="profile-header-cover"></div>
                        <!-- END profile-header-cover -->
                        <!-- BEGIN profile-header-content -->
                        <div class="profile-header-content">
                            <!-- BEGIN profile-header-img -->
                            <div class="profile-header-img">
                                @{
                                    var avatar = Context.Session.GetString("avatar") == null ? "/img/avatar.jpg" : "/img/" + Context.Session.GetString("avatar");
                                }
                                <img src="@avatar" alt="">
                            </div>
                            <!-- END profile-header-img -->
                            <!-- BEGIN profile-header-info -->
                            <div class="profile-header-info">
                                <h4 class="m-t-10 m-b-5">@User.Identity.Name</h4>
                                <a href="/user/editprofile" class="btn btn-sm btn-info mb-2">Edit Profile</a>
                            </div>
                            <!-- END profile-header-info -->
                        </div>
                        <!-- END profile-header-content -->
                        <!-- BEGIN profile-header-tab -->
                        <ul class="profile-header-tab nav nav-tabs" style="visibility: hidden;">
                            <li class="nav-item"><a href="https://www.bootdey.com/snippets/view/bs4-profile-with-timeline-posts" target="__blank" class="nav-link_">POSTS</a></li>
                            <li class="nav-item"><a href="https://www.bootdey.com/snippets/view/bs4-profile-about" target="__blank" class="nav-link_">ABOUT</a></li>
                            <li class="nav-item"><a href="https://www.bootdey.com/snippets/view/profile-photos" target="__blank" class="nav-link_">PHOTOS</a></li>
                            <li class="nav-item"><a href="https://www.bootdey.com/snippets/view/profile-videos" target="__blank" class="nav-link_">VIDEOS</a></li>
                            <li class="nav-item"><a href="https://www.bootdey.com/snippets/view/bs4-profile-friend-list" target="__blank" class="nav-link_ active show">FRIENDS</a></li>
                        </ul>
                        <!-- END profile-header-tab -->
                    </div>
                </div>
                <!-- end profile -->
                <!-- begin profile-content -->
                <div class="profile-content">
                    <!-- begin tab-content -->
                    <div class="tab-content p-0">
                        <!-- begin #profile-post tab -->
                        <div class="tab-pane fade active show" id="profile-post">
                            <!-- begin timeline -->
                            <ul class="timeline">
                                @{
                                    var userId = int.Parse(User.FindFirstValue(ClaimTypes.Sid));
                                }
                                @if (Model.Where(i => i.User.Id == @userId).Count() != 0)
                                {
                                    @foreach (var item in Model.Where(i => i.User.Id == userId).OrderByDescending(i => i.CreatedDate))
                                    {
                                        <li id="post-@item.Id">
                                            <!-- begin timeline-time -->
                                            <div class="timeline-time">
                                                @{
                                                    DateTime createdDate = DateTime.Parse(item.CreatedDate.ToString());
                                                }
                                                <span class="date">@createdDate.Date.ToString("dd/MM/yyyy")</span>
                                                <span class="time">@createdDate.Hour:@createdDate.Minute</span>
                                            </div>
                                            <!-- end timeline-time -->
                                            <!-- begin timeline-icon -->
                                            <div class="timeline-icon">
                                                <a href="javascript:;">&nbsp;</a>
                                            </div>
                                            <!-- end timeline-icon -->
                                            <!-- begin timeline-body -->
                                            <div class="timeline-body">
                                                <div class="timeline-header">
                                                    @{
                                                        var avatarpost = Context.Session.GetString("avatar") == null ? "/img/avatar.jpg" : "/img/" + Context.Session.GetString("avatar");
                                                    }
                                                    <img class="userimage" src=" @avatarpost" alt="">
                                                    @* <span class="userimage"><img src="https://bootdey.com/img/Content/avatar/avatar3.png" alt=""></span>*@
                                                    <span class="username"><a href="javascript:;">@item.User.Username</a> <small></small></span>
                                                    <div class="pull-right text-right">
                                                        <div class="dropdown">
                                                            @*<div class="card-text" data-toggle="dropdown" aria-expanded="false"><i class="fa fa-ellipsis-h"></i></div>*@
                                                            <button class="btn btn-secondary bg-transparent text-dark border-0" type="button" data-toggle="dropdown" aria-expanded="false">
                                                                <i class="fa fa-ellipsis-h"></i>
                                                            </button>
                                                            <div class="dropdown-menu" style="margin-left: -155px;">
                                                                <a class="dropdown-item" href="#" data-toggle="modal" data-target="#editPostModal" onclick="getPostById(@item.Id)"><i class="fa fa-pencil" aria-hidden="true"></i> Chỉnh sửa bài viết</a>
                                                                <a class="dropdown-item" href="#" data-toggle="modal" data-target="#deletePostModal" onclick="getPostId(@item.Id)"><i class="fa fa-trash" aria-hidden="true"></i> Xóa bài</a>
                                                                @*<a class="dropdown-item" href="#" onclick="deletePost(@item.Id)"><i class="fa fa-trash" aria-hidden="true"></i> Xóa bài</a>*@
                                                                <a class="dropdown-item" href="#"><i class="fa fa-window-close" aria-hidden="true"></i> Ẩn bài viết</a>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="timeline-content">
                                                    <h4 id="title-@item.Id">@item.Title</h4>
                                                </div>
                                                <div class="timeline-content short-content" id="container-content-@item.Id" onclick="showMoreContent(@item.Id)">
                                                    <p id="content-@item.Id">@Html.Raw(@item.Content)</p>
                                                </div>
                                                <div class="timeline-likes">
                                                    <div class="stats-right">        
                                                       @* <span class="stats-text">@item.Comments.Count Comment</span>*@
                                                        <span class="stats-text">@item.View View</span>

                                                    </div>
                                                    <div class="stats">
                                                    @*    <span class="fa-stack fa-fw stats-icon">
                                                            <i class="fa fa-circle fa-stack-2x text-primary"></i>
                                                            <i class="fa fa-thumbs-up fa-stack-1x fa-inverse"></i>
                                                        </span>
                                                        <span class="stats-total">4.3k</span>*@
                                                    </div>
                                                </div>
                                                <div class="timeline-footer">
                                                 @*   <a href="javascript:;" class="m-r-15 text-inverse-lighter"><i class="fa fa-thumbs-up fa-fw fa-lg m-r-3"></i> Like</a>*@
                                                 @*<a href="javascript:;" class="m-r-15 text-inverse-lighter"><i class="fa fa-comments fa-fw fa-lg m-r-3"></i> Comment</a>*@
                                                </div>
                                           @*     <div class="timeline-comment-box">
                                                    <div class="user">
                                                        @{
                                                            var avatarcomment = Context.Session.GetString("avatar") == null ? "/img/avatar.jpg" : "/img/" + Context.Session.GetString("avatar");
                                                        }
                                                        <img class="userimage" src=" @avatarcomment" alt="">
                                                    </div>
                                                    <div class="input">
                                                        <form action="">
                                                            <div class="input-group">
                                                                <input type="text" class="form-control rounded-corner" placeholder="Write a comment...">
                                                                <span class="input-group-btn p-l-10">
                                                                    <button class="btn btn-primary f-s-12 rounded-corner" type="button">Comment</button>
                                                                </span>
                                                            </div>
                                                        </form>
                                                    </div>
                                                </div>*@
                                            </div>
                                            <!-- end timeline-body -->
                                        </li>
                                    }
                                }
                                else
                                {
                                    <li>
                                        <!-- begin timeline-time -->
                                        <div class="timeline-time">
                                            <span class="date"></span>
                                            <span class="time"></span>
                                        </div>
                                        <div class="timeline-icon">
                                            <a href="javascript:;">&nbsp;</a>
                                        </div>
                                        <div class="timeline-body">
                                            <div class="timeline-content">
                                                <h3>Bạn chưa có bài viết nào!</h3>
                                            </div>
                                        </div>
                                    </li>
                                }
                            </ul>
                            <!-- end timeline -->
                        </div>
                        <!-- end #profile-post tab -->
                    </div>
                    <!-- end tab-content -->
                </div>
                <!-- end profile-content -->
            </div>
        </div>
    </div>
</div>
<!-- Modal -->
<div class="modal fade" id="editPostModal" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <form action="#" method="">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Tạo bài viết</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group row mb-3">
                        <label for="title" class="col-sm-2 col-form-label">Tiêu đề:</label>
                        <div class="col-sm-10">
                            <input type="text" name="title" class="form-control" id="title" value="" placeholder="Tiêu đề">
                        </div>
                    </div>
                    <div class="form-group row mb-3">
                        <label for="title" class="col-sm-2 col-form-label">Danh mục:</label>
                        <div class="col-sm-10">
                            <select class="form-control" id="category">
                                @foreach (var category in categories as List<Category>)
                                {
                                    <option value="@category.Id">@category.Name</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="form-group row mb-3">
                        <label for="inputPassword" class="col-sm-2 col-form-label">Nội dung:</label>
                        <div class="col-sm-10">
                            <textarea name="content" id="content-home" class="form-control w-100" rows="10"></textarea>
                        </div>
                    </div>
                    <div class="form-group row mb-3">
                        <label for="exampleFormControlFile1" class="col-sm-2 col-form-label">Ảnh bài viết:</label>
                        <div class="col-sm-10">
                            <input type="file" name="file" class="form-control-file" id="file">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" id="btnCloseModal" data-dismiss="modal">Đóng</button>
                    <button type="button" class="btn btn-primary" id="btnSubmit" value="add" onclick="checkUpdate()">Lưu</button>
                </div>
            </form>
        </div>
    </div>
</div>
@*- Modal xóa -->*@
<div class="modal fade" id="deletePostModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel" style="color:black">Xác nhận xóa</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Bạn có chắc chắn muốn xóa bài viết này?</p>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnCloseModalDelete" class="btn btn-secondary" data-dismiss="modal" onclick="closeModal()">Hủy</button>
                <button type="button" id="btnDeletePost" class="btn btn-danger" onclick="deletePostWithModal()">Xóa</button>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script src="~/js/post.js"></script>
    <script>
        function showMoreContent(id) {
            var content = document.getElementById('container-content-' + id);
            var displayValue = window.getComputedStyle(content).getPropertyValue('display')
            console.log(displayValue);
            if (displayValue == "-webkit-box") {
                content.setAttribute('style', 'display: block;')
            } else {
                content.setAttribute('style', 'display: -webkit-box;')
            }
        }
    </script>
    @*<script>
        const url = "/Post/";
        const request = new XMLHttpRequest();
        const btnSubmit = document.getElementById("btnSubmit");
        const btnCloseModal = document.getElementById("btnCloseModal");
        const listPost = document.getElementById("listPost");

        function getPostById(id) {
            request.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    const { id, title, content, categoryId } = JSON.parse(
                        this.responseText
                    );
                    document.getElementById("title").value = title;
                    CKEDITOR.instances["content-home"].setData(content);
                    document.getElementById("category").value = categoryId;
                    btnSubmit.value = id;
                    btnSubmit.innerText = "Cập nhật"
                }
            };

            request.open("GET", url + "GetPostById?id=" + id, true);
            request.send();
        }

        function checkUpdate() {
            if (btnSubmit.value != "add")
                update();
            else
                create();
        }

        function getDataForm() {
            var formData = new FormData();
            formData.append("Title", document.getElementById("title").value);
            formData.append("Content", CKEDITOR.instances["content-home"].getData());
            formData.append("CategoryId", document.getElementById("category").value);
            formData.append("file", document.getElementById("file").files[0] || "");
            return formData;
        }

        function update() {
            var post = getDataForm();
            post.append("Id", btnSubmit.value);
            request.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    var res = JSON.parse(this.responseText);
                    if (res.message != null) {
                        error.innerHTML = res.message;
                        return;
                    }

                    document.getElementById(`title-${res.id}`).innerText = res.title;
                    document.getElementById(`content-${res.id}`).innerText = res.content;
                    //document.getElementById(post - ${ res.id }).children[3].innerText = getSubCategoryNameBySubCategoryId(res.subCategoryId);
                    //document.getElementById(post - ${ res.id }).children[4].innerHTML =
                    //    <img src="${res.thumbnail != null ? " / img / uploads / posts / " + res.thumbnail : " / img /default.png"}" width = "100" height = "100" alt = "" />;

                    alert("Cập nhật bài viết thành công!");
                    //resetForm();
                    document.getElementById("btnCloseModal").click();
                }
            };
            request.open("POST", url + "Update", true);
            request.send(post);
        }
        
        //function deletePost(id) {
        //    if (confirm("Bạn có chắc chắn muốn xoá bài viết này!") == true) {
        //        request.onreadystatechange = function () {
        //            if (this.readyState == 4 && this.status == 200) {
        //                const id = this.responseText;
        //                document.getElementById("post-"+id).style.display = "none";
        //                alert("Xóa bài viết thành công");
        //            }
        //        };
        //        request.open("POST", url + "Delete", true);
        //        request.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        //        request.send("id=" + id);
        //    }
        //}
        
        function getPostId(id) {
            document.getElementById("btnDeletePost").value = id;
        }

        function deletePostWithModal() {
            var id = document.getElementById("btnDeletePost").value;
            request.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    const id = this.responseText;
                    document.getElementById("post-" + id).style.display = "none";
                    document.getElementById("btnCloseModalDelete").click();
                    alert("Xóa bài viết thành công");
                }
            };
            request.open("POST", url + "Delete", true);
            request.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            request.send("id=" + id);
        }
    </script>*@

}